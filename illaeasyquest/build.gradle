/*
 * This file is part of the Illarion project.
 *
 * Copyright Â© 2016 - Illarion e.V.
 *
 * Illarion is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Illarion is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven-publish'

apply from: '../versions.gradle'

archivesBaseName = 'illarion_easyquest'
mainClassName = 'illarion.easyquest.gui.MainFrame'

dependencies {
    compile project(':common')
    compile group: 'org.slf4j', name: 'slf4j-api', version: project.ext.slf4jVersion
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: project.ext.slf4jVersion
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: project.ext.slf4jVersion
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: project.ext.slf4jVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: project.ext.logbackVersion
    compile group: 'org.bushe', name: 'eventbus', version: '1.4'
    compile group: 'com.github.insubstantial', name: 'substance', version: project.ext.insubstantialVersion
    compile group: 'com.github.insubstantial', name: 'substance-flamingo', version: project.ext.insubstantialVersion
    compile group: 'org.tinyjee.jgraphx', name: 'jgraphx', version: '3.4.1.3'
}

processResources.dependsOn {
    createFileLists
}

task createFileLists {
    ['condition', 'handler', 'trigger'].each { directory ->
        FileTree filesTree = fileTree('src/main/resources') {
            include "template/$directory/*.lua"
        }

        File listFile = file("src/main/resources/template/$directory/filelist")
        listFile.createNewFile()
        listFile.write("")
        filesTree.visit { file ->
            if (file.relativePath.toString().endsWith('.lua')) {
                listFile << "$file.relativePath\n"
            }
        }
    }
}

jar {
    dependsOn { gitVersion }
    manifest {
        attributes         \
                'Main-Class': 'illarion.easyquest.gui.MainFrame',       \
                'Permissions': 'all-permissions',        \
                'Codebase': 'illarion.org',        \
                'Application-Name': 'Illarion easyQuest editor',        \
                'Application-Library-Allowable-Codebase': 'illarion.org',        \
                'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ssZ'),        \
                'Built-By': System.getProperty('user.name'),         \
                'Built-JDK': System.getProperty('java.version'),         \
                'Implementation-Title': 'Illarion easyQuest Editor',         \
                'Implementation-Vendor': 'Illarion e.V.',        \
                'Implementation-Version': project.ext.fullVersion
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url project.ext.mavenRepo
        }
    }
}
