/*
 * This file is part of the Illarion project.
 *
 * Copyright Â© 2016 - Illarion e.V.
 *
 * Illarion is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Illarion is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'idea'

apply from: '../versions.gradle'

archivesBaseName = 'illarion_easynpc'
mainClassName = 'illarion.easynpc.gui.MainFrame'

project.extensions.antlr = [
        grammarpackage: "illarion.easynpc.grammar",
        antlrSource   : 'src/main/antlr4',
        destinationDir: "src/generated/java"
]

idea {
    module {
        sourceDirs += file(antlr.destinationDir)
    }
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile project(':common')
    compile group: 'org.slf4j', name: 'slf4j-api', version: project.ext.slf4jVersion
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: project.ext.slf4jVersion
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: project.ext.slf4jVersion
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: project.ext.slf4jVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: project.ext.logbackVersion
    compile group: 'org.bushe', name: 'eventbus', version: '1.4'
    compile group: 'com.github.insubstantial', name: 'substance', version: project.ext.insubstantialVersion
    compile group: 'com.github.insubstantial', name: 'substance-flamingo', version: project.ext.insubstantialVersion
    compile group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.6.1'
    compile group: 'com.fifesoft', name: 'autocomplete', version: '2.6.1'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7'

    antlr4 group: 'org.antlr', name: 'antlr4', version: '4.7'

    runtime group: 'org.illarion', name: 'rsc_tables', version: project.ext.illarionResourcesVersion
}

task antlrOutputDir {
    doFirst {
        mkdir(antlr.destinationDir)
    }
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    def outputDir = "${antlr.destinationDir}/${pkg}"

    inputs.files grammars.files
    outputs.dir file(outputDir)

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4

    args = ["-o", "${outputDir}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

tasks.withType(FindBugs) {
    exclude '**/illarion/easynpc/grammar/*'
    excludeFilter = file("$projectDir/findbugs-exclude.xml")
}

tasks.withType(Pmd) {
    exclude '**/illarion/easynpc/grammar/*'
}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

jar {
    dependsOn { gitVersion }
    manifest {
        attributes          \
                 'Main-Class': 'illarion.easynpc.gui.MainFrame',         \
                 'Permissions': 'all-permissions',         \
                 'Codebase': 'illarion.org',         \
                 'Application-Name': 'Illarion easyNPC editor',         \
                 'Application-Library-Allowable-Codebase': 'illarion.org',         \
                 'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ssZ'),         \
                 'Built-By': System.getProperty('user.name'),          \
                 'Built-JDK': System.getProperty('java.version'),          \
                 'Implementation-Title': 'Illarion easyNPC Editor',          \
                 'Implementation-Vendor': 'Illarion e.V.',         \
                 'Implementation-Version': project.ext.fullVersion
    }
}

clean {
    delete antlr.destinationDir
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url project.ext.mavenRepo
        }
    }
}
